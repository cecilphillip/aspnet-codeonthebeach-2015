@model Demos.Config.CustomConfigOptions

@{
    ViewData["Title"] = "Configuration";
}

<div class="row mb25">
    <div class="col-md-12">
        <div class="box-tab">
            <ul class="nav nav-tabs">
                <li class="active">
                    <a href="#demo-render" data-toggle="tab">Sample</a>
                </li>
                <li>
                    <a href="#demo-code" data-toggle="tab">Code</a>
                </li>
            </ul>
            <div class="tab-content ">
                <div class="tab-pane fade active in" id="demo-render">
                    TagHelpers
                    <div demo-secure="admin">
                        this is some secure content
                    </div>

                </div>
                <div class="tab-pane fade" id="demo-code">
                    <pre><code class="cs">
    [TargetElement("my-element", Attributes = AttributeName)]
    public class MyHelperTagHelper : TagHelper
    {
        private const string AttributeName = "my-attribute";

        [HtmlAttributeName(AttributeName)]
        public string CustomAttribute { get; set; }

        [ViewContext]
        public ViewContext ViewContext { get; set; }

        public override void Process(TagHelperContext context, TagHelperOutput output)
        {
            base.Process(context, output);
        }
        
        //Alternatively, you could use ProcessAsync        
        
        //public override Task ProcessAsync(TagHelperContext context, TagHelperOutput output)
        //{
        //    return base.ProcessAsync(context, output);
        //}
    }   
                                                         </code></pre>
                </div>
            </div>
        </div>
    </div>
</div>
